// generated from rosidl_adapter/resource/msg.idl.em
// with input from as2_msgs/msg/MissionUpdate.msg
// generated code does not contain a copyright notice


module as2_msgs {
  module msg {
    module MissionUpdate_Constants {
      @verbatim (language="comment", text=
        "Execute a mission in the interpreter")
      const uint8 EXECUTE = 0;
      @verbatim (language="comment", text=
        "Load a mission to the interpreter")
      const uint8 LOAD = 1;
      @verbatim (language="comment", text=
        "Start the execution of a mission")
      const uint8 START = 2;
      @verbatim (language="comment", text=
        "Pause the execution of a mission")
      const uint8 PAUSE = 3;
      @verbatim (language="comment", text=
        "Resume the execution of a mission")
      const uint8 RESUME = 4;
      @verbatim (language="comment", text=
        "Stop the execution of a mission")
      const uint8 STOP = 5;
      @verbatim (language="comment", text=
        "Jump to a specific item in the mission")
      const uint8 JUMP_TO = 6;
      @verbatim (language="comment", text=
        "Repeat the execution of a mission")
      const uint8 REPEAT = 7;
      @verbatim (language="comment", text=
        "Insert an item in the mission")
      const uint8 INSERT = 8;
      @verbatim (language="comment", text=
        "Modify an item in the mission")
      const uint8 MODIFY = 9;
      @verbatim (language="comment", text=
        "Remove an item in the mission")
      const uint8 REMOVE = 10;
      @verbatim (language="comment", text=
        "Reset the interpreter")
      const uint8 RESET = 11;
      @verbatim (language="comment", text=
        "Abort the execution of a mission")
      const uint8 ABORT = 12;
    };
    @verbatim (language="comment", text=
      "Message that sends a mission to the interpreter")
    struct MissionUpdate {
      @verbatim (language="comment", text=
        "ID of the drone that will execute the mission")
      string drone_id;

      @verbatim (language="comment", text=
        "ID of the mission to be executed")
      int32 mission_id;

      @verbatim (language="comment", text=
        "ID of the item to be executed")
      int32 item_id;

      @verbatim (language="comment", text=
        "Action to be performed in the interpreter")
      uint8 action;

      @verbatim (language="comment", text=
        "JSON formatted mission to be executed")
      string mission;
    };
  };
};
